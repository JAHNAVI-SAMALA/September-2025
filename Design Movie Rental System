class MovieRentingSystem:

    def __init__(self, n: int, entries: List[List[int]]):
        self.price_map = {}
        self.unrented = defaultdict(SortedList)
        self.rented = SortedList()
        for shop,movie,price in entries:
            self.price_map[(shop,movie)] = price
            self.unrented[movie].add((price,shop))

    def search(self, movie: int) -> List[int]:
        sl = self.unrented.get(movie,None)
        if not sl:
            return []
        res = []
        for i in range(min(5,len(sl))):
            _,shop = sl[i]
            res.append(shop)
        return res

    def rent(self, shop: int, movie: int) -> None:
        price = self.price_map[(shop,movie)]
        self.unrented[movie].remove((price,shop))
        self.rented.add((price,shop,movie))

    def drop(self, shop: int, movie: int) -> None:
        price = self.price_map[(shop,movie)]
        self.rented.remove((price,shop,movie))
        self.unrented[movie].add((price,shop))
    def report(self) -> List[List[int]]:
        res = []
        for i in range(min(5,len(self.rented))):
            price,shop,movie = self.rented[i]
            res.append([shop,movie])
        return res


# Your MovieRentingSystem object will be instantiated and called as such:
# obj = MovieRentingSystem(n, entries)
# param_1 = obj.search(movie)
# obj.rent(shop,movie)
# obj.drop(shop,movie)
# param_4 = obj.report()
